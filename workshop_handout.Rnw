%
% Example Workshop Handout with title page and a section demonstrating
% the different environments defined in the top matter
%
\documentclass[a4paper,12pt,twoside]{memoir}
%\usepackage{~/R_workshop_handout/btp}    % Use the trainermanual package option (i.e. \usepackage[trainermanual]{btp}) to generate the Trainer's version of the manual

%% Set some Workshop specific info
%\setWorkshopTitle{My Workshop}
%\setWorkshopVenue{Somewhere, Earth}
%\setWorkshopDate{Feb 2013}
%\setWorkshopAuthor{Me\\
%Myself\\
%and I}

%% this document can be rendered in R by typing:
%		CODEDIR <- Sys.getenv("CODEDIR")
%		DATADIR <- Sys.getenv("DATADIR")
%		setwd(paste(DATADIR,'/pdfs/probe_reports/all_probes', sep=""))
%		library(knitr)
%		Sys.setenv(TEXINPUTS=getwd(),
%				     BIBINPUTS=getwd(),
%				     BSTINPUTS=getwd())
%		knit2pdf("~/R_workshop_handout/workshop_handout.Rnw", output=paste(DATADIR,"/pdfs/R_workshop_handout.tex",sep=""))

<<setup, echo=FALSE, include=FALSE, cache=FALSE>>=
CODEDIR <- Sys.getenv("CODEDIR")
DATADIR <- Sys.getenv("DATADIR")
library(xtable)
library(reshape)
library(plyr)
library(stringr)
library(made4)

@

\begin{document}

%
% Workshop Title Page
%
%\workshoptitlepage

\section{Aim of this workshop}
Brief introduction to R
Basic use
get you 
\begin{enumerate}
\item{fundamental use}
\item{data types}
\item{read in data}
\item{quality-check and visualise data}
\item{write out data}
\item{rqtl}
\end{enumerate}

\section{fundamental use}
Definition:
R uses \textit{functions} to get things done. Think of them as tools.
The functions are collated into \textit{libraries} that can be loaded when needed. Think of them as toolboxes.
For example, in the same way that a carpenter may keep all their chisels together in a toolbox, a particular R library might contain functions to allow the plotting of data. \\
So, libraries contain collections of functions, which are what get things done. When one first opens R, the \textit{base} library is automatically loaded, and provides the fundamental functions. \\
The following code shows the installation and loading of a library
<<libraries, eval=TRUE, cache=TRUE>>=
# comments start with a hash (like this line, which is not run)

# install a package
install.packages("ggplot2")
# load the package
library(ggplot2)

# note that when installing, one needs to quote the package name, but when loading it one does not 
@

\section{data types}
R has different ways of storing data, that are appropriate for different uses.
\subsection{vector}
<<vector, eval=TRUE, cache=TRUE>>=
# two kinds of vectors. a is a numeric vector, b is a character vector
a <- c(1,2,3,4,5)
a
a + 1

# vectors can be split into components by indexing
# get the first element of the vector
a[1]   

# get the first three elements of the vector
a[1:3] 

# get all the elements of the vector except the second
a[-2]  

# replace the second element of the vector
a[2] <- 10
a

# try replacing it with something else
a[2] <- "10"
a
# the vector has been changed to a character vector (note the quotes above), and can no longer be used for arithmetic
a + 1

# it can be changed back though, using a function:
as.numeric(a) + 1
@

\subsection{list}
Vectors must be all one \textit{type} of data -- eg. numeric, character, boolean. Lists do not have this restriction, and can mix types of data
<<vector, eval=TRUE, cache=TRUE>>=
my_list <- list("I", "have", 10, "cars")

# one can even put a vector inside a list (a is the numeric vector from before)
my_list[[5]] <- a

# getting a subset of a list is similar to a vector, but notice the double brackets
my_list[[3]]

...but it can get tricky
my_list[[5]][1:2]
@

\subsection{data.frame}
data.frames are great. They are ideal for storing and manipulating experimental data. Think of them as a spreadsheet, where columns can contain different types of data. Data can be sliced and diced in many ways, and it is easy to aggregate the data too.
<<data_frame, eval=TRUE, cache=TRUE>>=

@
\section{read in data}
\section{quality-check and visualise data}
\section{write out data}
\section{rqtl}

\section{Example Section Heading}

%\begin{information}
%Information to be provided to the trainee.
%\end{information}

%\begin{steps}
%Instructions for the trainee to perform.
%\end{steps}

%\begin{note}
%Something of note.
%\end{note}

%\begin{warning}
%A warning to the trainee which needs to be read carefully.
%\end{warning}

%\begin{questions}
%First question.
%\begin{answer}
%Answer to first question.
%\end{answer}

%Second question.
%\begin{answer}
%Answer to second question.
%\end{answer}
%\end{questions}

%\begin{bonus}
%An optional bonus section for those progressing rapidly.
%\end{bonus}

%\begin{advanced}
%An optional advanced section for those progressing very rapidly or to be used for future reference.
%\end{advanced}

%\begin{lstlisting}
%# several lines of bash (non-R) code
%cd ~/
%ls -l
%# a long command that line wraps automatically
%tophat --solexa-quals -g 2 --library-type fr-unstranded -j annotation/Danio_rerio.Zv9.66.spliceSites -o tophat/ZV9_2cells genome/ZV9 data/2cells_1.fastq data/2cells_2.fastq
%\end{lstlisting}

<<a_bit_of_R, echo=TRUE, include=FALSE, cache=FALSE>>=
   # some R code
   a <- c(1,2,3,4,5)
   a + 1                # increment every value in a vector
   exp(a)               # another vector operation
   for (i in 1:5) print("hello world")
@

\end{document}
